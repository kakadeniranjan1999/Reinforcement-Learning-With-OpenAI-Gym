ENVIRONMENT:
  env_name: 'FrozenLake-v1'
  custom_map_flag: False
  custom_map: [
      'SFFHF',
      'HFHFF',
      'HFFFH',
      'HHHFH',
      'HFFFG'
  ]  # Define custom_map of n x n dimensions only if custom_map_flag is set True
  render_flag: False
  rewards:
    positive_step_reward: 0.25  # Reward for ending up on FROZEN surface
    negative_step_reward: -1.0  # Reward for ending up in HOLE
    goal_step_reward: 1.0  # Reward for ending up to GOAL

AGENT:
  total_episodes: 50000
  gamma: 0.97
  epsilon: 1.0
  min_epsilon: 0.01
  training_data_deque_max_len: 1000  # Max length for deque array that stores training data
  train_start_threshold: 500  # Starts training model after length of training_data_deque_max_len exceeds given value
  load_model_flag: True
  model_path: 'Training/TrainedModels/FrozenLakeDQN/FrozenLake-v1_14-Sep-2021_20-01-42.h5'  # Define model_path if load_model_flag is True

NN_MODEL:
  neuron_units: [32, 64]  # [hidden layer1, hidden layer2]
  activations: ['swish', 'swish', 'linear']  # [layer1, layer2, output_layer] Refer https://keras.io/api/layers/activations/
  kernel_initializers: ['he_uniform', 'he_uniform', 'he_uniform']  # Refer https://keras.io/api/layers/initializers/
  loss: 'mse'  # Refer https://keras.io/api/losses/
  learning_rate: 0.01
  batch_size: 32
  model_checkpoint: 50  # Saves model after every given episodes